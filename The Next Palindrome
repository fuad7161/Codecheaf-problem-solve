//Author: Fuadul Hasan(fuadul202@gmail.com)
//BSMRSTU,Gopalganj
#include<bits/stdc++.h>
using namespace std;
//int input........
template <typename T> inline void readline(T &n) {n = 0; int f = 1; register int ch = getchar();
 for (; !isdigit(ch); ch = getchar()) if (ch == '-') f = -1;for (; isdigit(ch); 
ch = getchar()) n = (n << 3) + (n << 1) + ch - '0';n = n * f;}
template <typename T, typename TT> inline void readline(T &n, TT &m) { readline(n); readline(m); }
template <typename T, typename TT, typename TTT> inline void readline(T &n, TT &m, TTT &l) { readline(n, m); readline(l);}
// long long input........
template <typename T> inline void readlinel(T &n) {n = 0; long long f = 1; register long long ch = getchar();
 for (; !isdigit(ch); ch = getchar()) if (ch == '-') f = -1;for (; isdigit(ch); 
ch = getchar()) n = (n << 3) + (n << 1) + ch - '0';n = n * f;}
template <typename T, typename TT> inline void readlinel(T &n, TT &m) { readlinel(n); readlinel(m); }
template <typename T, typename TT, typename TTT> inline void readlinel(T &n, TT &m, TTT &l) { readlinel(n, m); readlinel(l);}
//debug..........
#define error(args...) {vector<string>_v=split(#args,',');err(_v.begin(),args);cout<<endl;}
vector<string> split(const string &s, char c) {vector<string>v; stringstream ss(s); string x;
while (getline(ss, x, c))v.emplace_back(x); return move(v);} void err(vector<string>::iterator it) {}
template<typename T, typename... Args>void err(vector<string>::iterator it, T a, Args...args) {
cout << it->substr((*it)[0] == ' ', it->length()) << " = " << a << " "; err(++it, args...);}
//............ignore it..................//
int dx[8]= {1,0,-1,0,-1,-1,1,1};int dy[8]= {0,1,0,-1,-1,1,-1,1}; int tc = 1;
#define F first
#define S second
#define pb  push_back
#define mp make_pair
#define Pi atan(1)*4
#define ll  long long int
#define happy cin.tie(0);
#define point(x) setprecision(x)
#define coding ios::sync_with_stdio(false);
#define Test printf("Case %d: ",tc++);
#define Unique(c) (c).resize(unique(all(c))-(c).begin())
#define vout(v) for (auto z: v) cout << z << " "; cout << endl;
void print(int n){printf("%d ", n);}
void print(int n,int m){printf("%d ",n);printf("%d ",m);}
void print(int n,int m,int k){printf("%d ",n);printf("%d ",m);printf("%d ",k);}
void print(ll n){printf("%I64d ", n);}
void print(ll n,ll m){printf("%I64d ",n);printf("%I64d ",m);}
void print(ll n,ll m,ll k){printf("%I64d ",n);printf("%I64d ",m);printf("%I64d ",k);}
#define   pr 	pair<int, int> 
#define   vpr 	vector<pr> 
#define   vi   	std::vector<int>
#define   vll  	std::vector<ll>
#define   all(n) n.begin(),n.end()
const int M           	= 1e9 + 7;
const int Inf           = (int)2e9 + 5;
const ll  Lnf           = (ll)2e18 + 5;
const int N             = 4e5 + 5;
const int N1            = 1e5 + 5;

int solve() 
{
	//happy coding


	string s;
	cin>>s;

	int n = s.size();
	int l,r;
	int mid;
	/*mid = (n - 1) / 2;
	l = mid;
	r = n - 1 - mid;*/
	if(n%2==0){
		mid = (n)/2-1;
		l = mid;
		r = mid+1;
	}else{
		mid = (n)/2;
		l = mid;
		r = mid;
	}
	int st = l;
	int e = r;
	while(l>=0&&r<=n-1){

		if(s[l]<s[r]){
			if(s[mid]!='9'){
				s[mid] = (char)(s[mid]+1);
			}
			else {
				int x = mid;
				while(l<=x--){
					if(s[x]!='9'){
						s[x] = (char)(s[x]+1);
						break;
					}
				}
				while(++x<=mid) s[x] = '0';
			}
			break;
		}else if(s[l]==s[r]&&l==0&&r==n-1){
			int zz = mid;
			bool f = true;
			while(zz>=0){
				//cout<<zz<<endl;
				if(s[zz]!='9'){
					s[zz] = (char)(s[zz]+1);
					if(s[zz+1]=='9'){
						int xx = zz+1;
						while(xx<=mid){
							s[xx++]  = '0';
						}
					}
					f = false;
					break;
				}
				zz--;
			}

			if(f){
				if(s[l]=='9'){
				int x  = n;
			string z = "1";
			while(x--){
				if(x!=0)
					z += '0';
				else z+='1';
			}
			s = z;
			cout<<s<<endl;
			return 0;
			}break;
		}break;
		}else if(s[l]>s[r]){
			break;
		}


		l--;
		r++;
	}
	
	while(st>=0){
		s[e++]=s[st--];
	}

	cout<<s<<endl;
	return 0;
	//error();
}
int main(){
	int test = 1;
	readline(test);//(void)getchar();
	while (test--)solve();return 0;
}
